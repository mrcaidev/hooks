---
import "@fontsource/inter/400.css";
import "@fontsource/inter/500.css";
import "@fontsource/inter/700.css";
import "global.css";

export type Props = {
  title: string;
  description: string;
};
const { title, description } = Astro.props;

const canonicalUrl = new URL(Astro.url.pathname, Astro.site);
const bannerUrl = new URL("/banner.png", Astro.site);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{title} - @mrcaidev/hooks</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalUrl} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content="Yuwang Cai" />
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    <meta
      name="theme-color"
      content="#fcfcfc"
      media="(prefers-color-scheme: light)"
    />
    <meta
      name="theme-color"
      content="#161616"
      media="(prefers-color-scheme: dark)"
    />

    <meta property="og:title" content={title} />
    <slot name="og-type" />
    <meta property="og:image" content={bannerUrl} />
    <meta property="og:image:type" content="image/png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content="@mrcaidev/hooks" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@mrcaidev" />
    <meta name="twitter:creator" content="@mrcaidev" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={bannerUrl} />

    <script is:inline>
      function getUserTheme() {
        try {
          return localStorage.getItem("theme");
        } catch {
          return null;
        }
      }

      const userTheme = getUserTheme();
      const isDarkDevice = matchMedia("(prefers-color-scheme: dark)").matches;
      const isDark = userTheme === "dark" || (!userTheme && isDarkDevice);

      const root = document.documentElement;
      if (isDark) {
        root.classList.add("dark");
      } else {
        root.classList.remove("dark");
      }
    </script>
  </head>
  <body
    class="bg-gray-1 dark:bg-graydark-1 font-sans text-gray-12 dark:text-graydark-12 [-webkit-tap-highlight-color:transparent]"
  >
    <slot name="body" />
  </body>
</html>
